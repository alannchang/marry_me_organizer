services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.2
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    healthcheck:
      test: ["CMD", "echo", "ruok", "|", "nc", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:7.2.2
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 5s
      retries: 5

  publisher:
    build: ./publisher
    container_name: publisher
    depends_on:
      kafka:
        condition: service_healthy

  subscriber1:
    build: 
      context: ./subscriber
      dockerfile: Dockerfile
    container_name: catering
    command: python catering.py
    depends_on:
      kafka:
        condition: service_healthy

  subscriber2:
    build:
      context: ./subscriber
      dockerfile: Dockerfile
    container_name: clean_up
    command: python clean_up.py
    depends_on:
      kafka:
        condition: service_healthy

  subscriber3:
    build:
      context: ./subscriber
      dockerfile: Dockerfile
    container_name: officiant
    command: python officiant.py
    depends_on:
      kafka:
        condition: service_healthy

  subscriber4:
    build:
      context: ./subscriber
      dockerfile: Dockerfile
    container_name: security
    command: python security.py
    depends_on:
      kafka:
        condition: service_healthy

  subscriber5:
    build:
      context: ./subscriber
      dockerfile: Dockerfile
    container_name: waiters
    command: python waiters.py
    depends_on:
      kafka:
        condition: service_healthy

